// Generated by CoffeeScript 1.10.0
(function() {
  var MAX_GPA, MIN_GPA, clamp, divide, gpa, penalties, ref;

  ref = require("../util"), clamp = ref.clamp, divide = ref.divide;

  penalties = require("../penalties");

  MIN_GPA = 0;

  MAX_GPA = 4;

  gpa = function(file, metrics) {
    var base, complexityPenalty, cyclomaticComplexity, filePenalty, functionLength, functionPenalty, penalized, tokenComplexity, tokenCount;
    tokenCount = metrics.tokenCount, tokenComplexity = metrics.tokenComplexity, functionLength = metrics.functionLength, cyclomaticComplexity = metrics.cyclomaticComplexity;
    base = divide(tokenCount, tokenComplexity) * MAX_GPA;
    filePenalty = penalties.longFile(tokenCount);
    functionPenalty = penalties.longFunction(functionLength.average);
    complexityPenalty = penalties.complexFile(cyclomaticComplexity.total);
    penalized = base * filePenalty * functionPenalty * complexityPenalty;
    return clamp(penalized, MIN_GPA, MAX_GPA);
  };

  module.exports = gpa;

}).call(this);
